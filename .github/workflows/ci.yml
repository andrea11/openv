name: CI (Lint, Build, Release)
on:
  push:
  pull_request:
permissions:
  contents: write
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run Clippy
        run: cargo clippy --all-features -- -D warnings
  build:
    name: Build ${{ matrix.target }}
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin_name: ${{ github.event.repository.name }}
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin_name: ${{ github.event.repository.name }}
          - os: macos-latest
            target: aarch64-apple-darwin
            bin_name: ${{ github.event.repository.name }}
            # - os: windows-latest
            #   target: x86_64-pc-windows-gnu
            #   bin_name: mytool.exe
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}
      - name: Install cross toolchain (Linux only)
        if: matrix.os == 'ubuntu-latest' && matrix.target != 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload binary artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/${{ matrix.bin_name }}
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Display downloaded files
        run: ls -R ./artifacts
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            Automated release for ${{ github.ref_name }}

            Includes binaries for:
            - Linux (x86_64)
            - macOS (Apple Silicon)
          # - Windows (x86_64) [Temporarily disabled]
          files: |
            artifacts/**/${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
